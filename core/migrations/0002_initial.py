# Generated by Django 5.0 on 2025-09-16 05:27

import core.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaMusica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('pasta', models.CharField(blank=True, help_text='Nome da pasta no Cloudflare R2', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CategoriaVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('pasta', models.CharField(blank=True, help_text='Nome da pasta no Cloudflare R2', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Configuracao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('valor', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Plano',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('preco', models.DecimalField(decimal_places=2, max_digits=6)),
                ('descricao', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email_verificado', models.BooleanField(default=False)),
                ('email_verification_token', models.CharField(blank=True, max_length=64, null=True)),
                ('email_verification_token_created', models.DateTimeField(blank=True, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('plano_ativo', models.BooleanField(default=False)),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=255, null=True)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('testes_gratis_utilizados', models.IntegerField(default=0)),
                ('logomarca', models.ImageField(blank=True, help_text='Logomarca para adicionar na tela final dos vídeos', null=True, upload_to='logomarcas_usuarios/')),
                ('posicao_logomarca', models.CharField(blank=True, choices=[('superior_esquerdo', 'Superior Esquerdo'), ('superior_direito', 'Superior Direito'), ('inferior_esquerdo', 'Inferior Esquerdo'), ('inferior_direito', 'Inferior Direito'), ('centro', 'Centro')], default='inferior_direito', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MusicaBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('arquivo_musica', models.FileField(blank=True, null=True, upload_to=core.models.upload_musica_para_categoria)),
                ('object_key', models.CharField(blank=True, max_length=500, null=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.categoriamusica')),
            ],
        ),
        migrations.CreateModel(
            name='Pagamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=8)),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('aprovado', 'Aprovado'), ('recusado', 'Recusado')], default='pendente', max_length=10)),
                ('data_pagamento', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('plano', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.plano')),
            ],
        ),
        migrations.CreateModel(
            name='Assinatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('ativo', 'Ativo'), ('pendente', 'Pendente'), ('cancelado', 'Cancelado')], default='pendente', max_length=10)),
                ('data_inicio', models.DateTimeField(auto_now_add=True)),
                ('data_expiracao', models.DateTimeField(blank=True, null=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('plano', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.plano')),
            ],
        ),
        migrations.CreateModel(
            name='VideoBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('arquivo_video', models.FileField(blank=True, null=True, upload_to=core.models.upload_video_para_categoria)),
                ('object_key', models.CharField(blank=True, max_length=500, null=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.categoriavideo')),
            ],
        ),
        migrations.CreateModel(
            name='VideoCorte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_youtube', models.URLField(verbose_name='URL do YouTube')),
                ('timestamps_sugeridos', models.JSONField(default=list, verbose_name='Timestamps de Picos (segundos)')),
                ('cortes_selecionados', models.JSONField(default=list, verbose_name='Cortes Escolhidos (índices)')),
                ('duracao_por_corte', models.PositiveIntegerField(default=30, verbose_name='Duração por Corte (segundos)')),
                ('categoria_musica', models.CharField(blank=True, default='', max_length=100)),
                ('status', models.CharField(choices=[('PROCESSANDO', 'Processando'), ('CONCLUIDO', 'Concluído'), ('ERRO', 'Erro')], default='PROCESSANDO', max_length=20)),
                ('arquivo_final', models.FileField(blank=True, null=True, upload_to='cortes/')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('expiracao_em', models.DateTimeField(blank=True, null=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vídeo Corte',
                'verbose_name_plural': 'Vídeos Cortes',
            },
        ),
        migrations.CreateModel(
            name='VideoGerado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PROCESSANDO', 'Processando'), ('CONCLUIDO', 'Concluído'), ('ERRO', 'Erro')], default='PROCESSANDO', max_length=20)),
                ('arquivo_final', models.CharField(blank=True, help_text='Caminho do vídeo gerado (local ou R2)', max_length=500, null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('duracao_segundos', models.IntegerField(default=30)),
                ('loop', models.BooleanField(default=False)),
                ('plano_de_fundo', models.CharField(default='normal', max_length=10)),
                ('volume_musica', models.IntegerField(default=70)),
                ('texto_overlay', models.TextField(blank=True, null=True)),
                ('narrador_texto', models.TextField(blank=True, null=True)),
                ('texto_tela_final', models.TextField(blank=True, null=True)),
                ('posicao_texto', models.CharField(default='centro', max_length=10)),
                ('cor_da_fonte', models.CharField(default='#FFFFFF', max_length=7)),
                ('texto_fonte', models.CharField(default='arial', max_length=50)),
                ('texto_tamanho', models.IntegerField(default=50)),
                ('texto_negrito', models.BooleanField(default=False)),
                ('texto_sublinhado', models.BooleanField(default=False)),
                ('legenda_sincronizada', models.BooleanField(default=False)),
                ('narrador_voz', models.CharField(default='pt-BR-Wavenet-B', max_length=50)),
                ('narrador_velocidade', models.IntegerField(default=100)),
                ('narrador_tom', models.FloatField(default=0.0)),
                ('caminho_audio_narrador', models.CharField(blank=True, help_text='Caminho do áudio de narração gerado', max_length=500, null=True)),
                ('caminho_legenda_ass', models.CharField(blank=True, help_text='Caminho da legenda ASS gerada', max_length=500, null=True)),
                ('caminho_imagem_texto', models.CharField(blank=True, help_text='Caminho da imagem de texto gerada', max_length=500, null=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
